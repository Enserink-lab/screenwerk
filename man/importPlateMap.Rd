% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/importPlateMap.R
\name{importPlateMap}
\alias{importPlateMap}
\title{Import plate maps from IncuCyte® .PlateMap and .CSV files}
\usage{
importPlateMap(
  importFile,
  .fileFormat,
  .plateMapGrp = list(type, name, group),
  .sourcePlateConv = FALSE
)
}
\arguments{
\item{importFile}{\code{character}; a character vector with either the path to a folder containing multiple or individual plate map files.}

\item{.fileFormat}{\code{character}; a predefined character vector stating the file format of the file(s) to import: .PlateMap, .csv}

\item{.plateMapGrp}{\code{list}; a list allowing to group individual components of the plate map and to generate a barcode for individual plates through the labels provided.}

\item{.sourcePlateConv}{\code{logical}; if TRUE, then the plate map will be converted to a source plate format. The default is FALSE, in which the plate map is imported in it's original format.}
}
\value{
Returns an object of class "data.frame", with essential columns containing the plate id ['plateid'] for each source plate, the location ['well'] of the drugs ['drug'] and their concentrations ['concentration'] along with the units ['unit'].
}
\description{
A component of the package \pkg{PlateMap}, useful for import, conversion and modification of plate maps to be used in a drug sensitivity screen.
The function \emph{\code{importPlateMap}} can be used for importing \emph{IncuCyte® .PlateMap} files, either as such or converted into a source plate format. Alternatively, plate maps can be imported as comma-separated values (csv) files. 
The source plate used in a drug sensitivity screen contains drugs at stock concentrations from which desired concentrations are dispensed onto destination plates, which are used to run the drug sensitivity screen on. 
The source plate serves as a reference for the location of drugs at their stock concentration used in dispensing files.
}
\details{
Drug sensitivity screens that use a library of drugs stored across multiple microplates, require the import of multiple plate maps, one for each microplate. 
Those plate maps can be directly imported from a comma separated values (.csv) file, or by utilizing a third-party software, such as the IncuCyte® Plate Map Editor. 
Third-party applications and tools usually work with proprietary file formats, which are not directly usable with R. The function \emph{importPlateMap} from the package \pkg{screenwerk} is able to read and import the 
proprietary .PlateMap file format. This allows the user to design source plates using the IncuCyte® Plate Map Editor and import the plate map into their pipeline.

The \emph{IncuCyte® .PlateMap} files are in a proprietary file format of the \strong{IncuCyte® Plate Map Editor}.

The function prints the progress of the plate map conversion on screen, along with a short summary of all compounds and cell lines that have been found.

The plate maps can be imported either as single files, or from multiple files. It is recommended to specify the file format \emph{\code{.fileFormat}} of the file to import, especially if the folder from which the files are imported contain different file formats.
Alternatively, the function is able to detect any of the supported file formats automatically and import them. Note: for the time being, it is not possible to import or combine plate maps from different file formats at once, but rather one file format at a time.  

Please note that this function allows the import plate maps with multiple components, such as \emph{compounds}, \emph{cells} and/or \emph{other}. However, doing so, requires a specific file nomenclature, if the plate maps are being imported from individual .csv files.
Those csv files follow a format represented by the plate layout. The first row denotes the column labels (numeric) for a given plate, while the first column denotes the row labels (alphabetic) for a given plate. The actual values for compounds (drugs) and the corresponding concentrations, 
and/or cells are then provided for each well following the layout of the plate type. The plate map for compounds, compound concentrations and cells needs to come from a separate file each. If multiple compounds are found in a given well, a single file for each compound needs to be provided.

\strong{compounds}, or drugs need to come from files that are named or contain at least the word \emph{drug} in the file name. The corresponding file with the drug concentrations, needs to be named or contain the word \emph{concentrations}.
If multiple drugs are found in individual wells, such as drug combinations, the drug pairs need to be imported from individual .csv files and labeled with a numeric suffix. The same applies to the concentration files.

For example: If two drugs are to be combined in the same well of a single plate, the files need to be named drugs-1.csv, drugs-2.csv, concentrations-1.csv and concentrations-2.csv.

This can be extended with any number of drugs. If no concentrations are found, only the drugs will be imported. However, it is not possible to import concentrations without the corresponding drug files.

\strong{cells}, or cell lines can be imported from .csv files named or containing the word \emph{cells}. If multiple cell lines are to be used, the files need to be labeled with a numeric suffix.
For example: cells-1.csv, cells-2.csv ...


The \emph{.plateMapGrp} allows to group individual components where necessary. A case scenario would be, in which multiple cell lines need to be imported that share the same drug treatment, but are found across different plates, or in which multiple cell lines are found across a single plate.
The benefit of grouping is that it does not require to import the same compounds multiple times for each cell line, but rather will replicate components that are not grouped for each grouped component.

For example: (a) If the same drugs and drug concentrations are to be used for multiple cell lines, the cells can be grouped, while the drugs left ungrouped. This will replicate the same drug treatment for each of the cell lines.
(b) If multiple cell lines are found across a single plate. in case where multiple cell lines are spread across a number of plates, all cell lines found on an individual plate can be assigned to the same group. The drug treatment will then be replicated across that group of cell lines.
Please note that only one component can be grouped at a time.

The grouping can be extended for the generation of plate barcodes. Instead of assigning individual grouping labels, a unique barcode can be assigned to each group, denoting the plate map to a single plate.

This does not apply to plate maps imported from .PlateMap files. Due to the internal standard of the file format, multiple components can be imported simultaneously through a single file. However, the name of the .PlateMap file will denote the plate id, or plate barcode.


The option \emph{\code{.sourcePlateConv}} will automatically convert the plate map to the requirement of a source plate. If this option is not set, the full data set is returned, including empty wells, or missing components.
If the plate map is being converted to a source plate format, the empty data will be removed as well as components that are not compounds, which can then be used as a reference for the generation of dispensing files using \code{generateDispensingData()}.
}
\examples{
\donttest{\dontrun{
# Import a .PlateMap file and convert plate map into a source plate format
sourcePlate <- importPlateMap("myPlateMapFile.PlateMap", .sourcePlateConv=TRUE)

# Importing plate map files from folder
importPlateMap("path/to/folder/", sourcePlateConv=FALSE)

# Importing plate maps from  .PlateMap, .xlsx or .csv files files
importPlateMap("path/to/folder/", .fileFormat = "PlateMap", sourcePlateConv=FALSE)
importPlateMap("path/to/folder/", .fileFormat = ".xlsx", sourcePlateConv=FALSE)
importPlateMap("path/to/folder/", .fileFormat = "csv", sourcePlateConv=FALSE)

# Grouping of cell lines across single and multiple plates
# Note: First two cell lines are grouped on the same plate, while the last two cell lines on another plate
importPlateMap("path/to/folder/", .fileFormat = ".csv", 
               .plateMapGrp = list(type = "Cells", name = c("A375", "WM1366", "WM45.1", "FEMXV"), 
                                   group = c("A", "A", "B", "B")))
                                   
# Extending labels with plate barcodes, same set two plates
importPlateMap("path/to/folder/", .fileFormat = ".csv", 
               .plateMapGrp = list(type = "Cells", name = c("A375", "WM1366", "WM45.1", "FEMXV"), 
                                   group = c("0921A1", "0921A1", "0921A2", "0921A2")))

# Extending labels with plate barcodes, two different sets of plates
importPlateMap("path/to/folder/", .fileFormat = ".csv", 
               .plateMapGrp = list(type = "Cells", name = c("A375", "WM1366", "WM45.1", "FEMXV"), 
                                   group = c("0921A1", "0921A1", "0921B1", "0921B1")))

}}

}
\keyword{incucyte}
\keyword{map}
\keyword{plate}
\keyword{platemap}
